https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-io Java IO - javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Input/Output FileOutputStream FileInputStream BufferedOutputStream BufferedInputStream SequenceInputStream ByteArrayOutputStream ByteArrayInputStream DataOutputStream DataInputStream Java FilterOutputStream Java FilterInputStream Java ObjectStream Java ObjectStreamField Console FilePermission Writer Reader FileWriter FileReader BufferedWriter BufferedReader CharArrayReader CharArrayWriter PrintStream PrintWriter OutputStreamWriter InputStreamReader PushbackInputStream PushbackReader StringWriter StringReader PipedWriter PipedReader FilterWriter FilterReader File FileDescriptor RandomAccessFile java.util.Scanner Java Serialization Java Serialization Java transient keyword Java Networking Java AWT Java Swing Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Interview Questions next ? ? prev Java I/O Tutorial Java I/O (Input and Output) is used to process the input and produce the output. Java uses the concept of a stream to make I/O operation fast. The java.io package contains all the classes required for input and output operations. We can perform file handling in Java by Java I/O API. Stream A stream is a sequence of data. In Java, a stream is composed of bytes. It's called a stream because it is like a stream of water that continues to flow. In Java, 3 streams are created for us automatically. All these streams are attached with the console. 1) System.out: standard output stream 2) System.in: standard input stream 3) System.err: standard error stream Let's see the code to print output and an error message to the console. 
System.out.println("simple message");
System.err.println("error message");
 Let's see the code to get input from console. 
int i=System.in.read();//returns ASCII code of 1st character
System.out.println((char)i);//will print the character
 Do You Know? How to write a common data to multiple files using a single stream only? How can we access multiple files by a single stream? How can we improve the performance of Input and Output operation? How many ways can we read data from the keyboard? What does the console class? How to compress and uncompress the data of a file? OutputStream vs InputStream The explanation of OutputStream and InputStream classes are given below: OutputStream Java application uses an output stream to write data to a destination; it may be a file, an array, peripheral device or socket. InputStream Java application uses an input stream to read data from a source; it may be a file, an array, peripheral device or socket. Let's understand the working of Java OutputStream and InputStream by the figure given below. OutputStream class OutputStream class is an abstract class. It is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink. Useful methods of OutputStream Method Description 1) public void write(int)throws IOException is used to write a byte to the current output stream. 2) public void write(byte[])throws IOException is used to write an array of byte to the current output stream. 3) public void flush()throws IOException flushes the current output stream. 4) public void close()throws IOException is used to close the current output stream. OutputStream Hierarchy InputStream class InputStream class is an abstract class. It is the superclass of all classes representing an input stream of bytes. Useful methods of InputStream Method Description 1) public abstract int read()throws IOException reads the next byte of data from the input stream. It returns -1 at the end of the file. 2) public int available()throws IOException returns an estimate of the number of bytes that can be read from the current input stream. 3) public void close()throws IOException is used to close the current input stream. InputStream Hierarchy Next TopicJava FileOutputStream class ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.