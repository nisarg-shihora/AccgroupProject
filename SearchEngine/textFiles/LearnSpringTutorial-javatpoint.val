https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/spring-tutorial Learn Spring Tutorial  - javatpoint ? SCROLL TO TOP Home Core Java Servlet JSP Struts2 Mail API Hibernate Spring Android Design Pattern Quiz Projects Interview Q Comment Forum Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation MVC Form Tag Library Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring + Angular CRUD Example File Upload Example Login & Logout Example Search Field Example Misc Best Spring Books Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz next ? Spring Tutorial This spring tutorial provides in-depth concepts of Spring Framework with simplified examples. It was developed by Rod Johnson in 2003. Spring framework makes the easy development of JavaEE application. It is helpful for beginners and experienced persons. Spring Framework Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF, etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems. The Spring framework comprises several modules such as IOC, AOP, DAO, Context, ORM, WEB MVC etc. We will learn these modules in next page. Let's understand the IOC and Dependency Injection first. Inversion Of Control (IOC) and Dependency Injection These are the design patterns that are used to remove dependency from the programming code. They make the code easier to test and maintain. Let's understand this with the following code: 
class Employee{
Address address;
Employee(){
address=new Address();
}
}
 In such case, there is dependency between the Employee and Address (tight coupling). In the Inversion of Control scenario, we do this something like this: 
class Employee{
Address address;
Employee(Address address){
this.address=address;
}
}
 Thus, IOC makes the code loosely coupled. In such case, there is no need to modify the code if our logic is moved to new environment. In Spring framework, IOC container is responsible to inject the dependency. We provide metadata to the IOC container either by XML file or annotation. Advantage of Dependency Injection makes the code loosely coupled so easy to maintain makes the code easy to test Advantages of Spring Framework There are many advantages of Spring Framework. They are as follows: 1) Predefined Templates Spring framework provides templates for JDBC, Hibernate, JPA etc. technologies. So there is no need to write too much code. It hides the basic steps of these technologies. Let's take the example of JdbcTemplate, you don't need to write the code for exception handling, creating connection, creating statement, committing transaction, closing connection etc. You need to write the code of executing query only. Thus, it save a lot of JDBC code. 2) Loose Coupling The Spring applications are loosely coupled because of dependency injection. 3) Easy to test The Dependency Injection makes easier to test the application. The EJB or Struts application require server to run the application but Spring framework doesn't require server. 4) Lightweight Spring framework is lightweight because of its POJO implementation. The Spring Framework doesn't force the programmer to inherit any class or implement any interface. That is why it is said non-invasive. 5) Fast Development The Dependency Injection feature of Spring Framework and it support to various frameworks makes the easy development of JavaEE application. 6) Powerful abstraction It provides powerful abstraction to JavaEE specifications such as JMS, JDBC, JPA and JTA. 7) Declarative support It provides declarative support for caching, validation, transactions and formatting. Spring Index Spring Tutorial What is Spring Spring Modules Spring Application Spring in IDE Spring in Myeclipse Spring in Eclipse Dependency Injection IOC container Dependency Injection Constructor Injection CI Dependent Object CI with collection CI with collection 2 CI with Map CI with Map2 CI Inheriting Bean Setter Injection SI Dependent Object SI with Collection SI with Collection 2 SI with Map SI with Map 2 CI vs SI Autowiring Factory Method Spring AOP AOP Concepts Spring1.2 AOP DTD SP AspectJ Annotation SP AspectJ XML Spring JdbcTemplate JdbcTemplate Example PreparedStatement ResultSetExtractor RowMapper NamedParameter SimpleJdbcTemplate Spring ORM Spring with ORM Spring with Hibernate Spring with JPA SPEL SpEL Examples Operators in SpEL variable in SpEL Spring MVC MVC Introduction Multiple View Page Multiple Controller Model Interface RequestParam Annotation Spring MVC Form Form Tag Library Form Text Field Form Radio Button Form Check Box Form Drop-Down List Spring MVC Applications MVC CRUD Example MVC Pagination Example File Upload Example Spring MVC Validation Spring MVC Validation Regular Expression Validation Number Validation Custom Validation Spring MVC Tiles Spring MVC Tiles Spring Remoting Remoting with Spring Spring with RMI Http Invoker Hessian Burlap Spring with JMS Spring OXM Spring with JAXB Spring with Xstream Spring with Castor Spring Java Mail Spring Java Mail Spring Web Spring with Struts2 Login Example Spring Security Tutorial Sp Security Tutorial Sp Security Introduction Sp Security Features Security Project Modules Sp Security XML Example Sp Security Java Example Sp Security Login Logout Sp Security Custom Login Form-Based Authentication Sp Security Remember Me Security at Method Level Sp Security Tag Library Spring Boot Spring Boot (15+) Spring Interview Interview Questions Spring Quiz Spring Quiz Reference Links http://www.springsource.org/ http://en.wikipedia.org/wiki/Spring_Framework Next TopicSpring Modules next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.