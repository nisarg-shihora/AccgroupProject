https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/display-list-of-timezone-with-gmt-and-utc-in-java Display List of TimeZone with GMT and UTC in Java - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Display List of TimeZone with GMT and UTC in Java It is very important to set proper TimeZone in Java code when dealing with Day Light Saving dates. In this section, we will display the list of TimeZone with GMT. TimeZone A time zone is an area that observes a uniform standard time for legal, commercial and social purposes. Time zones tend to follow the boundaries between countries and their subdivisions instead of strictly following longitude, because it is convenient for areas in frequent communication to keep the same time. There are the following time zones are available in Java library: Java timezones for Africa Cities (total 54 time zones are available) Java timezones for American Cities (total 167 time zones are available) Java timezones for Antarctica (total 12 time zones are available) Java timezones for Arctic (total 1 time zones are available) Java timezones for Asian Cities/Regions (total 99 time zones are available) Java timezones for Australian Cities/Regions (total 12 time zones are available) Java timezones for Australian Cities/Regions (total 23 time zones are available) Java timezones for Brazilian Cities/Region (total 4 time zones are available) Other regions: Canada, Chile, Cuba, Egypt, Europe, US (total 257 time zones are available) GMT GMT stands for Greenwich Mean Time Zone. It is the mean solar time displayed by Shepherd gate clock at the Royal observatory in Greenwich, London counted from midnight. It is used to clearly designate epoch by avoiding confusing reference to local time zone. When the sun is at its highest point exactly above the Prime Meridian, it is 12:00 noon at Greenwich. Java Program to Display List of Time zone with GMT TimeZoneList.java 
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public class TimeZoneExample
{
  public static void main (String args[])
  {
    String[]ids = TimeZone.getAvailableIDs ();
    for (String id:ids)
      {
	System.out.println (displayTimeZone (TimeZone.getTimeZone (id)));
      }
    System.out.println ("\nTotal TimeZone ID " + ids.length);
  }
  private static String displayTimeZone (TimeZone tz)
  {
    long hours = TimeUnit.MILLISECONDS.toHours (tz.getRawOffset ());
    long minutes = TimeUnit.MILLISECONDS.toMinutes (tz.getRawOffset ())
      - TimeUnit.HOURS.toMinutes (hours);
    // avoid -4:-30 issue
    minutes = Math.abs (minutes);
    String result = "";
    if (hours > 0)
      {
	result =
	  String.format ("(GMT+%d:%02d) %s", hours, minutes, tz.getID ());
      }
    else
      {
	result =
	  String.format ("(GMT%d:%02d) %s", hours, minutes, tz.getID ());
      }
    return result;
  }
}
 Output: The list is too long to show. It displays total 629 time zones with GMT. Coordinated Universal Time (UTC) UTC time zone is a standard time zone by which the word regulates clocks and time. It is a constant time scale that does not change for Daylight Saving Time (DST). UtcExample.java 
import java.util.Collections;
import java.util.List;
public class UtcExample 
{
    public static void main(String args[]) 
{
        List timezones7 = DateTimes.fetchTimeZones7(DateTimes.OffsetType.UTC);                
        List timezones8 = DateTimes.fetchTimeZones8(DateTimes.OffsetType.UTC);
        Collections.sort(timezones8);
        timezones8.forEach(System.out::println);
    }    
}
 DateTimes.java 
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
public final class DateTimes 
{
    public enum OffsetType 
{
        GMT, UTC
    }
    private DateTimes() 
{
        throw new AssertionError("Cannot be instantiated");
    }
    public static List<String> fetchTimeZones8(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        Set<String> zoneIds = ZoneId.getAvailableZoneIds();
        LocalDateTime now = LocalDateTime.now();
        zoneIds.forEach((zoneId) -> 
{
            timezones.add("(" + type + now.atZone(ZoneId.of(zoneId))
                    .getOffset().getId().replace("Z", "+00:00") + ") " + zoneId);
        });
        return timezones;
    }
    public static List<String> fetchTimeZones7(OffsetType type) 
{
        List<String> timezones = new ArrayList<>();
        String[] zoneIds = TimeZone.getAvailableIDs();
        long timestamp = new Date().getTime();
        for (String zoneId : zoneIds) {
            TimeZone curTimeZone = TimeZone.getTimeZone(zoneId);
            curTimeZone.useDaylightTime();
            String offset = formatOffset(curTimeZone.getOffset(timestamp));
            timezones.add("(" + type + offset + ") " + zoneId);
        }
        return timezones;
    }
    public static String formatOffset(int offset) 
{
        if (offset == 0) 
{
            return "+00:00";
        }
        long offsetInHours = TimeUnit.MILLISECONDS.toHours(offset);
        long offsetInMinutesFromHours = TimeUnit.HOURS.toMinutes(offsetInHours);
        long offsetInMinutes = TimeUnit.MILLISECONDS.toMinutes(offset);
        offsetInMinutes = Math.abs(offsetInMinutesFromHours - offsetInMinutes);
        return String.format("%+03d:%02d", offsetInHours, offsetInMinutes);
    }
}
 Output: It displays various time zone than above. Next TopicBinary Strings Without Consecutive Ones in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.