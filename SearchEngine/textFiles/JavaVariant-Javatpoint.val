https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.https://www.javatpoint.com/java-variant Java Variant - Javatpoint ? SCROLL TO TOP Home Java Programs OOPs String Exception Multithreading Collections JavaFX JSP Spring Spring Boot Projects Interview Questions Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Method Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Variant In Java, Variant is a class that is defined in two different packages. javax.ws.rs.core.Variant org.eclipse.swt.ole.win32.Variant javax.ws.rs.core.Variant It is in-built in JDK. The Java Variant class belongs to javax.ws.rs.core.Variant. It extends the Object class. the class is used for abstraction for a resource representation variant that contains information about media type, language and encoding of the resource representation. Constructors of the Variant Class Constructor Description Variant(MediaType mediaType, Locale language, String encoding) Create a new instance of Variant. Variant(MediaType mediaType, String language, String encoding) Variant(MediaType m diaType, String language, String country, String encoding) Variant(MediaType mediaType, String language, String country, String languageVariant, String encoding) Methods of the Variant Class The class provides the following methods: Method Description encodings(String... encodings) It creates a Variant.VariantListBuilder initialized with a set of supported encodings. equals(Object obj) It compares obj to this variant to see if they are the same considering all property values. getEncoding() The method gets the encoding of the variant. getLanguage() The method gets the language of the variant. getLanguageString() The method gets the string representation of the variant language, or null if no language has been set. getMediaType() The method gets the media type of the variant. hashCode() The method generates hash code from variant properties. languages(Locale... languages) It creates a Variant.VariantListBuilder initialized with a set of supported languages. mediaTypes(MediaType... mediaTypes) It creates a Variant.VariantListBuilder initialized with a set of supported media types. toString() toString in class Object. org.eclipse.swt.ole.win32.Variant It is a third-party library. A Variant is a generic OLE mechanism for passing data of different types via a common interface. It is used within the OleAutomation object for getting a property, setting a property or invoking a method on an OLE Control or OLE Document. Fields of The Variant Class Field Name Description NULL A shared Variant instance with type VT_NULL. sizeof The size in bytes of a native VARIANT struct. Constructors of The Variant Class Constructor Description Variant() It creates an empty Variant object with type VT_EMPTY. Variant(boolean val) It creates a Variant object that represents a Java boolean as a VT_BOOL. Variant(double val) It creates a Variant object that represents a Java double as a VT_R8. Variant(float val) It creates a Variant object that represents a Java float as a VT_R4. Variant(int val) It creates a Variant object that represents a Java int as a VT_I4. Variant(long val) It creates a Variant object that represents a Java long as a VT_I8. Variant(long ptr, short byRefType) It creates a Variant object that contains a reference to the data being transferred. Variant(short val) It creates a Variant object that represents a Java short as a VT_I2. Variant(String string) It creates a Variant object that represents a Java String as a VT_BSTR. Variant(org.eclipse.swt.internal.ole.win32.IDispatch idispatch) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Variant(org.eclipse.swt.internal.ole.win32.IUnknown unknown) It creates a Variant object that represents an IUnknown interface as a VT_UNKNOWN. Variant(OleAutomation automation) It creates a Variant object that represents an IDispatch interface as a VT_Dispatch. Methods of The Variant Class Method Description dispose() It releases the resources associated with this Variant. getAutomation() The method returns the OleAutomation object represented by this Variant. getBoolean() The method returns the Java boolean represented by this Variant. getByRef() The method returns a pointer to the referenced data represented by this Variant. getByte() The method returns the Java byte represented by this Variant. getChar() The method returns the Java char represented by this Variant. getDispatch() The method returns the IDispatch object represented by this Variant. getDouble() The method returns the Java double represented by this Variant. getFloat() The method returns the Java float represented by this Variant. getInt() The method returns the Java int represented by this Variant. getLong() The method returns the Java long represented by this Variant. getShort() The method returns the Java short represented by this Variant. getString() The method returns the Java String represented by this Variant. getType() The method returns the type of the variant type. getUnknown() The method returns the IUnknown object represented by this Variant. setByRef(boolean val) The method updates the by reference value of this variant with a new boolean value. setByRef(float val) The method updates the by reference value of this variant with a new float value. setByRef(long val) The method updates the by reference value of this variant with a new integer value. setByRef(short val) The method updates the by reference value of this variant with a new short value. toString() The method returns a string containing a concise, human-readable description of the receiver. win32_copy(long pVarDest, Variant varSrc) It invokes platform specific functionality to copy a variant into operating system memory. win32_new(long pVariant) It invokes platform specific functionality to wrap a variant that was allocated in operating system memory. Next TopicMessageDigest in Java ? prev next ? For Videos Join Our Youtube Channel: Join Now Feedback Send your Feedback to [email protected] Help Others, Please Share Learn Latest Tutorials Splunk SPSS Swagger Transact-SQL Tumblr ReactJS Regex Reinforcement Learning R Programming RxJS React Native Python Design Patterns Python Pillow Python Turtle Keras Preparation Aptitude Reasoning Verbal Ability Interview Questions Company Questions Trending Technologies Artificial Intelligence AWS Selenium Cloud Computing Hadoop ReactJS Data Science Angular 7 Blockchain Git Machine Learning DevOps B.Tech / MCA DBMS Data Structures DAA Operating System Computer Network Compiler Design Computer Organization Discrete Mathematics Ethical Hacking Computer Graphics Software Engineering Web Technology Cyber Security Automata C Programming C++ Java .Net Python Programs Control System Data Mining Data Warehouse Javatpoint Services JavaTpoint offers too many high quality services. Mail us on [email protected], to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at [email protected] Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2021 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.